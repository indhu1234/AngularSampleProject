"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var log_1 = require("../util/log");
var inquirer = require("inquirer");
var Configstore = require("configstore");
//import * as argon2 from "argon2";
module.exports = function (program) {
    program
        .command('proxy [host] [port]')
        .description('configure the proxy through which you wish to send all commands')
        //.option('-u, --username <value>, Username for authentication based proxy')
        //.option('-p, --password <value>, Password for authentication based proxy')
        .option('-r, --remove-proxy', 'Remove current proxy settings')
        .option('-a, --auth, Flag for if you wish to enter a username and password for your proxy')
        .action(function (host, port, options) {
        if (options['removeProxy']) {
            var proxy = new Configstore('/proxy');
            proxy.delete('host');
            proxy.delete('port');
            proxy.delete('username');
            proxy.delete('password');
            log_1.log.ok('Proxy Removed!');
        }
        else {
            var prompts = [];
            if (options['auth']) {
                prompts.push({
                    type: 'input',
                    message: "Please enter your username:",
                    name: 'username'
                }, {
                    type: 'password',
                    message: "Please enter your password:",
                    name: 'password'
                });
            }
            prompts.push({
                type: 'confirm',
                message: "You are about to set all requests to go through proxy " + host + ":" + port + ", are you sure you want to do this?",
                name: 'proxy',
                default: false
            });
            inquirer
                .prompt(prompts)
                .then(handleUserResponse)
                .catch(function (err) { return console.log("Login unsuccessful: " + JSON.stringify(err)); });
        }
        function handleUserResponse(answer) {
            if (answer.proxy) {
                var proxy = new Configstore('/proxy');
                proxy.set('host', host);
                proxy.set('port', port);
                proxy.set('username', answer.username);
                proxy.set('password', answer.password);
                log_1.log.ok('Proxy set for all future commands');
            }
            else {
                log_1.log.fail('Proxy command aborted');
            }
        }
    });
};
//# sourceMappingURL=proxy.js.map